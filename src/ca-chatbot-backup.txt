// npm start
import { useState } from 'react';
import axios from 'axios';

export default function IRChatbot() {
  const [query, setQuery] = useState('');
  const [chatHistory, setChatHistory] = useState([]);
  const [loading, setLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!query.trim()) return;

    const currentQuery = query;
    setLoading(true);
    setQuery('');

    try {
      // const res = await axios.post('https://ir-backend-pov2.onrender.com/query', { query: currentQuery });
      const res = await axios.post('http://localhost:8000/query', { query: currentQuery });

      const responseObj = res.data.answers || { Default: res.data.answer };

      setChatHistory((prev) => [...prev, { query: currentQuery, response: responseObj }]);
    } catch (err) {
      console.error('❌ Axios error:', err);
      setChatHistory((prev) => [
        ...prev,
        { query: currentQuery, response: { Error: 'Error fetching response.' } }
      ]);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 flex items-center justify-center px-4 py-6">
      <div className="bg-white p-8 rounded-xl shadow-xl border w-full max-w-[700px] mx-auto">
        
        {/* Logo */}
        <div className="mb-6 text-center">
          <img
            src="/CA Logo narrow.png"
            alt="Chicago Atlantic Logo"
            style={{ height: '100px', width: 'auto' }}
            className="mx-auto"
          />
        </div>

        {/* Heading */}
        <h1 className="text-4xl font-bold text-center text-blue-800 mb-8">
          Chicago Atlantic Chatbot
        </h1>

        {/* Input Form */}
        <form onSubmit={handleSubmit} className="w-full mb-10">
          <textarea
            value={query}
            onChange={(e) => setQuery(e.target.value)}
            onKeyDown={(e) => {
              if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                handleSubmit(e);
              }
            }}
            placeholder="Ask a question..."
            rows={3}
            className="w-full border rounded-lg p-3 text-lg resize-none text-gray-700 font-sans"
          />
          <button
            type="submit"
            className="w-full mt-3 bg-blue-600 text-white p-3 rounded-lg hover:bg-blue-700"
            disabled={loading}
          >
            {loading ? 'Thinking...' : 'Ask'}
          </button>
        </form>

        {/* Chat History */}
        <div className="space-y-6">
          {chatHistory.map((item, index) => (
            <div key={index} className="bg-gray-100 p-5 rounded-lg shadow">
              <p className="text-sm text-gray-400 mb-1">You asked:</p>
              <p className="italic text-blue-900 mb-4">"{item.query}"</p>

              {Object.entries(item.response).map(([fund, answer], i) => (
                <div key={i} className="mb-2">
                  <h2 className="text-lg font-semibold text-blue-700">{fund}</h2>
                  {answer.source && (
                    <p className="text-sm text-gray-500">📄 Source: {answer.source}</p>
                  )}
                  <p className="text-gray-800 mt-1">{answer.answer || answer}</p>
                </div>
              ))}
            </div>
          ))}
        </div>

      </div>
    </div>
  );
}
